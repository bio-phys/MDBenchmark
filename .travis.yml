os: linux
language: python
python: "3.8"

branches:
  only:
    - develop
    - master
    - version-3

cache:
  - pip: true
  - directories:
      - $PIP_CACHE_DIR

env:
  global:
    - PIP_CACHE_DIR=$HOME/.cache/pip
    - CODECOV=""
    - PYTEST_COV=""
    - UPGRADE_PIP="pip install --upgrade pip"

jobs:
  include:
    - stage: "Linux - Unit tests"
      name: "Python 3.8"
      env:
        - CODECOV="--cov mdbenchmark"
        - PYTEST_COV="pytest-cov codecov"
    - name: "Python 3.7"
      language: python
      python: "3.7"
    - name: "Python 3.6"
      language: python
      python: "3.6"
      dist: xenial
    - name: "Python 3.5"
      python: "3.5"
    - name: "Python 2.7"
      python: "2.7"

    - stage: "Linting and formatting"
      name: "Formatting with black"
      script: poetry run make reformat-check
    - name: "Linting with flake8"
      script: poetry run make flake8
    - name: "Sorting with isort"
      script: poetry run make isort-check
    - name: "Lint reStructuredText"
      script: poetry run make rst-lint
    - name: "Try to build documentation"
      install: poetry install --extras docs
      script:
        - cd docs
        - poetry run make build

    - stage: "macOS - Unit tests"
      os: osx
      osx_image: xcode11.2
      language: shell
      before_script:
        - bash .travis/before_script.sh
      before_cache:
        - rm -f "$HOME/Library/Caches/pip/log/debug.log"
      cache:
        directories:
          - "$HOME/Library/Caches/pip"
          - "$HOME/Library/Caches/pypoetry"

before_install:
  - $UPGRADE_PIP
  - pip install poetry

install:
  - poetry install

script:
  - poetry run pytest $CODECOV

after_success:
  - if [ -z ${CODECOV} ]; then echo "Skipping codecov submit"; else codecov; fi
